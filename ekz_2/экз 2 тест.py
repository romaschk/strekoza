# 1. Ниже представлены утверждения о списках. Какие из них верны?
#Один и тот же объект может появляться в списке несколько раз !!!!!!
#Размер списка можно изменить
#Эти два списка одинаковы: ['a', 'b', 'c'] ['c', 'a', 'b'] !!!!!!!
#Все элементы в списке должны быть одного типа
#В списке может содержаться любой тип данных, кроме других списков
# a1=['a','b','c']
# a2=['c','a','b']
# a1.sort()
# a2.sort()
# if a1==a2:
#     print('списки равны')
# else:
#     print('списки не равны')

#2. Выберите верные утверждения про списки:
#списки могут содержать элементы различных типов !!!!
#списки неизменяемые
#списки изменяемые !!!!!

#3. К чему приведет обращение к непустому списку по индексу «-1»?
#Вернется последний элемент !!!!!
#Ошибка IndexError
#Вернется первый элемент
# Ошибка KeyError


#4. Допустим, объявлен список — a = ['foo', 'bar', 'baz', 'qux', 'quux', 'corge'].
# Ниже представлены несколько программ.
# В каких из них вывод указан правильно?
#>>> print(a[4::-2]) ['quux', 'baz', 'foo']!!!!!
#>>> a[:] is a True
#>>> print(a[-6]) Traceback (most recent call last): File "", line 1, in IndexError: list index out of range
#>>> print(a[-5:-3]) ['bar', 'baz']!!!!!!
# a = ['foo', 'bar', 'baz', 'qux', 'quux', 'corge']
# print(a[4::-2])  #['quux', 'baz', 'foo']!!!!!
# # a[:] is a True
# print(a[-6]) #Traceback (most recent call last): File "", line 1, in IndexError: list index out of range
# print(a[-5:-3]) # ['bar', 'baz']!!!!

#5. Объявлен список — a = [1, 2, 3, 4, 5].Ниже представлены строки кода, удаляющие элемент.
# Какие из них в результате дадут список [1, 2, 4, 5]?
#del a[2] !!!!!!!
#a[2:2] = []
#a[2:3] = []!!!!!!!
#a.remove(3) !!!!!!
#a[2] = []
# a = [1, 2, 3, 4, 5]
# # del a[2] #!!!
# # a[2:2] = []
# a[2:3] = [] #!!!
# # a.remove(3) #!!!!
# # a[2] = []
# print(a)

#6. Объявлен кортеж — t = ('foo', 'bar', 'baz').
# Ниже представлены варианты изменения ‘bar’ на ‘qux’. Какой вариант верный?
#Правильного ответа нет !!!!
#t[1:1] = 'qux'
#t(1) = 'qux'
#t[1] = 'qux'

#7. Ниже представлены варианты объявления кортежа с одним элементом — ‘foo’. Какой из них правильный?
# t = ['foo'] список
# t = ('foo',) кортеж !!!!
# t = ('foo') строка
#t = {'foo'} словарь
#print(t)

#8. Можно ли изменять список, находящийся внутри кортежа?
#Нет
#Да !!!

#9. Что такое кортеж?
#Неупорядоченная неизменяемая коллекция объектов произвольных типов
#Упорядоченная изменяемая коллекция объектов произвольных типов
#Упорядоченная неизменяемая коллекция объектов произвольных типов !!!!
#Упорядоченная неизменяемая коллекция объектов одного типа
#Неупорядоченная неизменяемая коллекция объектов одного типа

#10. Что из следующего ниже верно о кортежах?
#Кортежи можно складывать !!!
#Кортеж занимает больше памяти чем список
#Кортеж может быть ключом словаря !!!
#У кортежа есть метод append()
#Кортеж занимает меньше памяти чем список !!!
#Кортеж может быть частью другого кортежа !!!
# a=(1,2,3,4,5,6)
# b=(45,6,7,2,3,56,7,7)
# c=a+b
# print(c)

# #11. Какие кортежи заданы верно?
# a=(1,2,3,4,5)
# b =[1,2,3,4,5]
# c =tuple('abcde')
# d =tuple(b)
# e = tuple(tuple(d))
# print(a) #!!!!
# print(b)
# print(c)#!!!!
# print(d)#!!!!
# print(e)#!!!!

# #12. Как будет выглядеть кортеж d?
# a=(1,2,3)
# b =[4,5,6]
# c=2
# d =(a+tuple(b))*c
# print(d)
#Ошибка
#(1, 2, 3, 1, 2, 3)
#(1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3)
#(1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6)!!!!!

#13. Выберите верные утверждения про словари:
#словари изменяемые
#словари неизменяемые !!

#14. Выберите верные утверждения:
#Словари изменяемы !!!
#Словари могут быть любой «глубины»!!!
#Словарь может содержать объект любого типа, кроме другого словаря
#Доступ к элементам словаря осуществляется с помощью ключа!!!!!
#Доступ к элементам словаря осуществляется с помощью позиции в словаре
#Все ключи в словаре должны быть одного и того же типа

#15. Ниже представлены несколько вариантов кода.
# Какой из них удалит элемент с ключом‘baz’ из словаря d?
#del d['baz'] #!!!!
#d[‘baz’]
#del.d(baz)
#del d(baz)

#16. Объявлен словарь — d = {'foo': 100, 'bar': 200, 'baz': 300}.
#Какой результат будет у d['bar':'baz']?
#Возникнет ошибка !!!!
#(200, 300)
#[200, 300]
#200 300
# d = {'foo': 100, 'bar': 200, 'baz': 300}
# d['bar':'baz']
# print(d)

#17. Как получить доступ к значению 30?
x=[
    "a",
    "b",
    {
        "foo":1,
        "bar":
            {
            "x":10,
            "y":20,
            "z":30
            },
            "baz":3
    },
    "c",
    "d"
]

# x[1][2][2]
#x[2]["bar"]["z"]!!!!!!
# x[2]["bar"][2]
# x[1][1][3]

#18. Что выведет эта программа?
# a_dict={"цвет":'синий',"фрукт":"яблоко","животное":"собака"}
# for key in a_dict:
#     print(key)
#цвет фрукт животное !!!
#синий яблоко собака
#'цвет' 'фрукт' 'животное'
#'синий' 'яблоко' 'собака'

#19. Что выведет эта программа?
a_dict={"цвет":'синий',"фрукт":"яблоко","животное":"собака"}
d_items=a_dict.items()
print(d_items)
#('цвет', 'синий'), ('фрукт', 'яблоко'), ('животное', 'собака')
#[('цвет', 'синий'), ('фрукт', 'яблоко'), ('животное', 'собака')]
#dict_items([('цвет'), ('фрукт'), ('животное')])
#dict_items([('цвет', 'синий'), ('фрукт', 'яблоко'), ('животное', 'собака')])!!!!!!!!!

#20. Прочтите утверждение. Если вы хотите работать с ключами словаря — можно воспользоваться keys().
# Это метод, возвращающий новый объект, содержащий ключи словаря. Истинно ли оно?
#Ложно
#Истинно !!!!!!

#21. Что такое множество в Python?
#Это любая коллекция элементов
#Это список, содержащий в себе только функции
#Это контейнер, значения в котором не повторяются !!!!!!
#Это список, содержащий вложенные списки в себе

#22. Каким образом правильно объявляется множество?
#a = {}!!!!!!
#a = []
#a = set()
#a = set

#23. Что выведет этот код?
a=[1,2,3,4,5,6,1,2,3,4,5,6]
x=len(set(a))
print(x)
#6!!!!!!
#5
#12
#0

#24. Чем отличаются методы remove() и discard(), применяемые к множеству?
#-Ничем
#-remove() удаляет элемент если он есть, но бросает ошибку если элемента нет.
# discard() просто удаляет элемент если он есть !!!!!!!!!
#-discard() удаляет элемент если он есть, но бросает ошибку если элемента нет.
# remove() просто удаляет элемент если он есть
#-Метода discard() для множеств не существует

#25. Что такое frozenset?
#Множество, которое нельзя изменять !!!!
#Множество, которое хранит в себе только неизменяемые объекты
#Множество, которое используется для хранения констант

#26. Какой метод используется для добавления элемента в множество?
#add()!!!!!
#append()
#new()
#get()

#27. Дайте определение конструкции try-except и что она делает
#код в блоке try приводит к исключению, интерпретатор ищет блок except , который указан следом, оставшаяся часть кода в try исполняться не будет.
